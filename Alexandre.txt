Alexandre Desorbaix

---JOPURNEE 1

---Settings sets : plugin

CODE SETTINGS SYNC UPLOAD SUMMARY
Version: 3.4.3
--------------------
GitHub Token: gho_**********
GitHub Gist: 59c6c0c9b4a3a3ef3a5a619bd95d8a44
GitHub Gist Type: Secret

Restarting Visual Studio Code may be required to apply color and file icon theme.
--------------------
Files Uploaded:
  extensions.json > extensions.json
  settings.json > settings.json
  life-cycle.json > globalStorage\mhutchie.git-graph\life-cycle.json

Extensions Ignored:
  No extensions ignored.

Extensions Removed:
  No extensions removed.

Extensions Added:
  auto-close-tag v0.5.10
  auto-rename-tag v0.1.6
  bootstrap-3-snippets v0.1.0
  code-settings-sync v3.4.3
  git-graph v1.30.0
  html-snippets v0.2.1
  js-snippets v0.2.6
  npm-install v0.0.1
  npm-intellisense v1.3.1
  path-intellisense v2.3.0
  React-JS-Snippet v3.0.54
  vscode-css-formatter v1.0.1
  vscode-eslint v2.1.16
  vscode-html-css v1.9.1
  vscode-language-pack-fr v1.52.2
  vscode-npm-script v0.3.22
  vscode-npm-scripts v0.2.4
--------------------
Done.


----
////
----

// https://github.com/zague77/2021-07-06-jpg.git
// cmd sur le rép :

git clone https://github.com/zague77/2021-07-06-jpg.git

cd 2021-07-06-jpg

code .


git config --global user.email "alex.j.alves@gmail.com"
git config --global user.name "zague77"

///command prompt (selectionneur l'interpreteur par defaut)

npm init -y
//-y pour pas validation à chaque fois

// "main": "index.js",
//ajout "dependencies":
// "lite-server
//-s (dependencies) que l'on doit enregistrer dans le package (pas ds le projet) et pas -g (que par projet)
//ou
 npm i -s lite-server 

//installation de projet et pas global

//script execution si pas dans g
//ajout dans package.json
  "start" :"lite-server" avec base.dir si besoin


  //page html
  //snippet html 2.5 et change en fr
  //snippet bs3-cdn après body

  npm i -s bootstrap@3.4

npm i -s jquery@1.11.1


npm start 

/*/ouverture port 3000 server

//http://localhost:3001/#
//descativer le cote : websocket type javascript
//


// css diner

----dans editeur chrome : exemple
:3000/favicon.ico:1 Failed to load resource: the server responded with a status of 404 (Not Found)
document.getElementById('navbar')
<div id=​"navbar">​…​</div>​
document.getElementsByClassName('list-view-description')
HTMLCollection []length: 0__proto__: HTMLCollectionitem: ƒ item()length: (...)namedItem: ƒ namedItem()constructor: ƒ HTMLCollection()Symbol(Symbol.iterator): ƒ values()Symbol(Symbol.toStringTag): "HTMLCollection"get length: ƒ length()__proto__: Object
Array.isArray(document.getElementsByClassName('list-view-description'))
false
document.getElementsByTagName('div')
HTMLCollection(16) [div#app, div#header, div#navbar, div.navbar-header, div.collapse.navbar-collapse.navbar-ex1-collapse, div.form-group, div#wrapper, div#finder, div#list, div.list-produit, div.list-produit-content, div#list-view, div#list-view-price, div#list-view-description, div#list-view-dimensions, div.list-view-actions, app: div#app, header: div#header, navbar: div#navbar, wrapper: div#wrapper, finder: div#finder, …]
docuement.querySelector('#list-view')
VM751:1 Uncaught ReferenceError: docuement is not defined
    at <anonymous>:1:1
(anonymous) @ VM751:1
document.querySelectorAll('div')
NodeList(16) [div#app, div#header, div#navbar, div.navbar-header, div.collapse.navbar-collapse.navbar-ex1-collapse, div.form-group, div#wrapper, div#finder, div#list, div.list-produit, div.list-produit-content, div#list-view, div#list-view-price, div#list-view-description, div#list-view-dimensions, div.list-view-actions]
Array.isArray(document.querySelectorAll('div'))
false
var stocks=document.getQuerySelectorAll('.list-produit-content h3, #list-view h2')
VM1222:1 Uncaught TypeError: document.getQuerySelectorAll is not a function
    at <anonymous>:1:21
(anonymous) @ VM1222:1
var stocks=document.querySelectorAll('.list-produit-content h3, #list-view h2')
undefined
stocks
NodeList(2) [h3, h2]
var stock=document.querySelector('.list-produit-content h3')
undefined
stock
<h3>​stock:3​</h3>​
type of stock
VM1424:1 Uncaught SyntaxError: Unexpected identifier
typeof stock
"object"
var arr=[]
undefined
typeof arr
"object"
arr.functionA=function(){}
ƒ (){}
arr
[functionA: ƒ]functionA: ƒ ()length: 0__proto__: Array(0)
arr.push('value A')
1
arr
["value A", functionA: ƒ]0: "value A"functionA: ƒ ()length: 1__proto__: Array(0)
Array.isArray(arr)
true



alt shift f : formattage et couleur


https://devdocs.io/

https://flukeout.github.io/



var value='voilie'; products.find(function(unElem){return unElem.name===value;})

var value='voilier'; products.filter(function(unElem){return unElem.name===value;})

-->
Object.assign([],products,[{value:2}])
[...products,{value:2}]

products.push({v:1233},{zert:123})
products.pop()

a.slice...

var sealdObject=Object.seal(abc) --> PEUX MODIFIER MAIS Rien supprimer
var freezeObject=Object.freeze(abc) --> ne peux rien modifier




--JOURNEE  2 : 
--npm i --save-dev json-server
--Yet Another REST Client sur chrome (plus d'outils extensions chrome)

-- patch : merge, put ajoute

npm run json 



http://localhost:5679/products?name=voilier


http://localhost:5679/products?id_gte=1

http://localhost:5679/products?expand=category


////test dans console direct du server chrome http://localhost:5679/
//shift entrée saut de ligne a l'intéreir 
var xhr=new XMLHttpRequest();
xhr.open('GET','http://localhost:5679/products');
xhr.onreadystatechange=function(evt){
    console.trace(xhr);
}
xhr.send();

var xhr=new XMLHttpRequest();
xhr.open('GET','http://localhost:5679/products');
xhr.onreadystatechange=function(evt){
    if(xhr.readyState<XMLHttpRequest.DONE) {return;}
    if(xhr.readyState!=200 && xhr.readyState!=201) {
            console.log('ERREUR');
            return;
            }
    console.trace(xhr);

}
xhr.send();


///ReferenceError
100 : information

200 : famille des OK

300 : redirection (304 vu comme 200 pare le serveur, a bien reçu la ressource)n Le client reçoit pas

400 : erreur coté Client
401  pas authorizé

500 : erreur coté server (internal server error)
il a compris la demande, mais incapable de résoudre

//
var xhr=new XMLHttpRequest();
xhr.open('PUT','http://localhost:5679/products/1');
xhr.setRequestHeader('Content-Type','applicvation/json');
xhr.onreadystatechange=function(evt){
    if(xhr.readyState<XMLHttpRequest.DONE) {return;}
    if(xhr.status!=200 && xhr.status!=201) {
            console.log('ERREUR');
            return;
            }
    console.trace(xhr.response);
}
xhr.send();

var p ={
    "id": 0,
    "name": "zodiac",
    "img": "https://picsum.photos/id/377/150/150",
    "price": 50000,
    "decription": "loremQuis cupidatat minim ad laborum velit sint pariatur voluptate sint ullamco dolor veniam enim.Qui laboris deserunt id do non mollit ullamco consectetur ullamco eu elit culpa.",
    "stock": 2,
    "dimensions": [
      {
        "size": "40 pieds"
      },
      {
        "tons": "40 tonneaux"
      },
      {
        "speed": "40 noeuds"
      }
    ],
    "categorieId": 0
  };
undefined



var xhr= new XHR('http://localhost:5679')

xhr.get('/products/1', function (responseText){
console.log(responseText);
})

//Jour 2 : après midi
////ES6 : en 2015 , pas pris en compte par navigateur
//ES7 pas fini d'eptre normalisé
ES6 : let et const
let produit=new Product(10, 'zod',1000000)
console.log(produit)
JSON.stringify(produit) --< QUE LES PUBLICS


// type appel
fetchloacl.put('https://localhost:5679', (obj) => console.log(obj),  boat,(obj) => console.log(obj))


//npm i -Save -dev typescript
-->//npm i -g typescript --> au niveau global dans le file (pour le user)


//tsc : typescript (tsc) --> javascript

-->//tsc --init

JOUR 3
 <script src="/js/fetch.js"></script>
    <script src="/js/xhr.js"></script>
    <script src="/js/metier.js"></script>
    <script src="/js/app.js"></script>
    devient

        <script src="/js/app.js" type='module'></script>

// tsc ou babel

class FetchCrud {
  -->
  export FetchCrud {



    // tsc tsc --> js
    // babel es6--> es5 (transpile)
    //webpack : package la version complete (.chunk agglomérat tout compiler) --> rassemeble tout / assemblage


//dans console : emuler nouvelle page
window.history.pushState('','nouvelle page','./produit/1')


//window.location

//kiss : keep it simple and stupid

Site https://www.w3schools.com/jsref/dom_obj_event.asp
//blur : sort de input 

//cookie - sessionstorage - localstorage
//websql : sql92 , intégéré // API HTML5 (qui a surchargé HTML)
//


Site  https://regex101.com/

//ecmascript 


///TYPESCRIPT

///Install REACT

/// Jour 4 : JEST pour test dans react
///Test sur REACT

nouveau response
npx create-react-app app  --template=typescript

 npm start
    Starts the development server.

  npm run build
    Bundles the app into static files for production.

  npm test
    Starts the test runner.

  npm run eject
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you can’t go back!

We suggest that you begin by typing:

  cd app
  npm start


command 1 :npm -g install serve

command 2 : serve -s build 
version buildé


https://www.npmjs.com/package/react-graphical-ui

on peux récupérer depuis

https://www.npmjs.com/package/react-graphical-ui
npm i -s react-graphical-ui


generate-react-cli

react storybook researche :
https://storybook.js.org/docs/react/get-started/introduction
//explication champ et exemple de code
//fichier de code par composant
//évite de ré-écrire

pour angular https://compodoc.app/

react
function : que UI, pas de décision
et
classcomponent  : this .styate : un seul état
et depuis le hook plusieurs étants
--> re rendu du component --> re updtae


--> un frere parle pas à sa soeur : entre deux composants
--> app contient tous les états 


Fonction pure : 
n paramètrre fixes --> sortit tjrs pareil
--> besoin pour les tests
--> allege écriture des tests

react : 30 lignes un composant
1 ligne code --> 5 lignes de tests

cature 4
npx generate-react-cli component values

https://github.com/champix56/react-native-template


'ctrl :' --> ajouter commentaire









